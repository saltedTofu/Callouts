{"ast":null,"code":"import screenShots from'../../utils/images';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ScreenShots(props){var Screenshot=props.Screenshot;var Map=props.Map;var screenSrc='';if(Map==='Amplified'){var array=screenShots.amplified;var stringToSearch=Screenshot.split(' ').join('');screenSrc=array.find(function(screenID){return screenID.includes(stringToSearch);});}else if(Map==='Construct'){var _array=screenShots.construct;var _stringToSearch=Screenshot.split(' ').join('');screenSrc=_array.find(function(screenID){return screenID.includes(_stringToSearch);});}else if(Map==='Guardian'){var _array2=screenShots.guardian;var _stringToSearch2=Screenshot.split(' ').join('');screenSrc=_array2.find(function(screenID){return screenID.includes(_stringToSearch2);});}else if(Map==='Heretic'){var _array3=screenShots.heretic;var _stringToSearch3=Screenshot.split(' ').join('');screenSrc=_array3.find(function(screenID){return screenID.includes(_stringToSearch3);});}else if(Map==='Narrows'){var _array4=screenShots.narrows;var _stringToSearch4=Screenshot.split(' ').join('');screenSrc=_array4.find(function(screenID){return screenID.includes(_stringToSearch4);});}else if(Map==='Onslaught'){var _array5=screenShots.onslaught;var _stringToSearch5=Screenshot.split(' ').join('');screenSrc=_array5.find(function(screenID){return screenID.includes(_stringToSearch5);});}else if(Map==='ThePit'){var _array6=screenShots.thePit;var _stringToSearch6=Screenshot.split(' ').join('');screenSrc=_array6.find(function(screenID){return screenID.includes(_stringToSearch6);});}return/*#__PURE__*/_jsxs(\"div\",{className:\"inGamePic\",children:[/*#__PURE__*/_jsx(\"h2\",{id:\"inGamePicText\",className:\"inGamePicText\",children:Screenshot}),/*#__PURE__*/_jsx(\"img\",{id:\"ScreenShot\",src:screenSrc,alt:\"Screen Shot of the Callout\"})]});}export default ScreenShots;","map":{"version":3,"sources":["C:/Users/Sault/Documents/Code/Callouts/calloutsio/src/components/ScreenShots/ScreenShots.js"],"names":["screenShots","ScreenShots","props","Screenshot","Map","screenSrc","array","amplified","stringToSearch","split","join","find","screenID","includes","construct","guardian","heretic","narrows","onslaught","thePit"],"mappings":"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","sourcesContent":["import screenShots from '../../utils/images';\r\n\r\nfunction ScreenShots(props) {\r\n  const Screenshot = props.Screenshot;\r\n  const Map = props.Map\r\n  let screenSrc='';\r\n\r\n  if(Map==='Amplified'){\r\n    let array = screenShots.amplified;\r\n    let stringToSearch = Screenshot.split(' ').join('');\r\n    screenSrc = array.find((screenID) => screenID.includes(stringToSearch));\r\n  }\r\n  else if(Map==='Construct'){\r\n    let array = screenShots.construct;\r\n    let stringToSearch = Screenshot.split(' ').join('');\r\n    screenSrc = array.find((screenID) => screenID.includes(stringToSearch));\r\n  }\r\n  else if(Map==='Guardian'){\r\n      let array = screenShots.guardian;\r\n      let stringToSearch = Screenshot.split(' ').join('');\r\n      screenSrc = array.find((screenID) => screenID.includes(stringToSearch));\r\n  }\r\n  else if(Map==='Heretic'){\r\n    let array = screenShots.heretic;\r\n    let stringToSearch = Screenshot.split(' ').join('');\r\n    screenSrc = array.find((screenID) => screenID.includes(stringToSearch));\r\n  }\r\n  else if(Map==='Narrows'){\r\n    let array = screenShots.narrows;\r\n    let stringToSearch = Screenshot.split(' ').join('');\r\n    screenSrc = array.find((screenID) => screenID.includes(stringToSearch));\r\n  }\r\n  else if(Map==='Onslaught'){\r\n    let array = screenShots.onslaught;\r\n    let stringToSearch = Screenshot.split(' ').join('');\r\n    screenSrc = array.find((screenID) => screenID.includes(stringToSearch));\r\n  }\r\n  else if(Map==='ThePit'){\r\n    let array = screenShots.thePit;\r\n    let stringToSearch = Screenshot.split(' ').join('');\r\n    screenSrc = array.find((screenID) => screenID.includes(stringToSearch));\r\n  }\r\n  return (\r\n    <div className=\"inGamePic\">\r\n      <h2 id=\"inGamePicText\" className=\"inGamePicText\">{Screenshot}</h2>\r\n      <img id=\"ScreenShot\" src={screenSrc} alt=\"Screen Shot of the Callout\"></img>\r\n    </div>\r\n  );\r\n}\r\n  \r\n  export default ScreenShots;\r\n  "]},"metadata":{},"sourceType":"module"}